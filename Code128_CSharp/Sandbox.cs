using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Code128_CSharp
{
    class C128Entry
    {
        public string f1;
        public char f2;
        public char f3;
        public string f4;
        public string f5;
    }

    class Sandbox
    {
        //var cvtarr = new Object[4, 128];
        Object[,] cvtarr = new Object[6, 107];
        C128Entry[] c128Array = new C128Entry[128];

        public void CreateArray()
        {

            LoadArray();
            ConvertArray();
        }

        private void ConvertArray()
        {
            for (int i1 = 1; i1 <= 106; i1++)
            {
                var c128Entry = new C128Entry();
                c128Entry.f1 = Convert.ToString(cvtarr[1, i1]);
                c128Entry.f2 = GetObjAsChar(cvtarr[2, i1]);
                c128Entry.f3 = GetObjAsChar(cvtarr[3, i1]);
                c128Entry.f4 = Convert.ToString(cvtarr[4, i1]);
                c128Entry.f5 = Convert.ToString(cvtarr[5, i1]);
                c128Array[i1 - 1] = c128Entry;
            }
        }

        public char GetObjAsChar(Object obj)
        {
            return obj.ToString() == "" ? chr(0) : Convert.ToChar(obj);
        }

        public void LoadArray()
        {

            //Define the conversion array

            cvtarr[1, 1] = "000";
            cvtarr[2, 1] = chr(32);
            cvtarr[3, 1] = chr(32);
            cvtarr[4, 1] = "00";
            cvtarr[5, 1] = chr(37) + chr(38) + chr(38);
            cvtarr[1, 2] = "001";
            cvtarr[2, 2] = chr(33);
            cvtarr[3, 2] = chr(33);
            cvtarr[4, 2] = "01";
            cvtarr[5, 2] = chr(38) + chr(37) + chr(38);
            cvtarr[1, 3] = "002";
            cvtarr[2, 3] = chr(34);
            cvtarr[3, 3] = chr(34);
            cvtarr[4, 3] = "02";
            cvtarr[5, 3] = chr(38) + chr(38) + chr(37);
            cvtarr[1, 4] = "003";
            cvtarr[2, 4] = chr(35);
            cvtarr[3, 4] = chr(35);
            cvtarr[4, 4] = "03";
            cvtarr[5, 4] = chr(34) + chr(34) + chr(39);
            cvtarr[1, 5] = "004";
            cvtarr[2, 5] = chr(36);
            cvtarr[3, 5] = chr(36);
            cvtarr[4, 5] = "04";
            cvtarr[5, 5] = chr(34) + chr(35) + chr(38);
            cvtarr[1, 6] = "005";
            cvtarr[2, 6] = chr(37);
            cvtarr[3, 6] = chr(37);
            cvtarr[4, 6] = "05";
            cvtarr[5, 6] = chr(35) + chr(34) + chr(38);
            cvtarr[1, 7] = "006";
            cvtarr[2, 7] = chr(38);
            cvtarr[3, 7] = chr(38);
            cvtarr[4, 7] = "06";
            cvtarr[5, 7] = chr(34) + chr(38) + chr(35);
            cvtarr[1, 8] = "007";
            cvtarr[2, 8] = chr(39);
            cvtarr[3, 8] = chr(39);
            cvtarr[4, 8] = "07";
            cvtarr[5, 8] = chr(34) + chr(39) + chr(34);
            cvtarr[1, 9] = "008";
            cvtarr[2, 9] = chr(40);
            cvtarr[3, 9] = chr(40);
            cvtarr[4, 9] = "08";
            cvtarr[5, 9] = chr(35) + chr(38) + chr(34);
            cvtarr[1, 10] = "009";
            cvtarr[2, 10] = chr(41);
            cvtarr[3, 10] = chr(41);
            cvtarr[4, 10] = "09";
            cvtarr[5, 10] = chr(38) + chr(34) + chr(35);
            cvtarr[1, 11] = "010";
            cvtarr[2, 11] = chr(42);
            cvtarr[3, 11] = chr(42);
            cvtarr[4, 11] = "10";
            cvtarr[5, 11] = chr(38) + chr(35) + chr(34);
            cvtarr[1, 12] = "011";
            cvtarr[2, 12] = chr(43);
            cvtarr[3, 12] = chr(43);
            cvtarr[4, 12] = "11";
            cvtarr[5, 12] = chr(39) + chr(34) + chr(34);
            cvtarr[1, 13] = "012";
            cvtarr[2, 13] = chr(44);
            cvtarr[3, 13] = chr(44);
            cvtarr[4, 13] = "12";
            cvtarr[5, 13] = chr(33) + chr(38) + chr(42);
            cvtarr[1, 14] = "013";
            cvtarr[2, 14] = chr(45);
            cvtarr[3, 14] = chr(45);
            cvtarr[4, 14] = "13";
            cvtarr[5, 14] = chr(34) + chr(37) + chr(42);
            cvtarr[1, 15] = "014";
            cvtarr[2, 15] = chr(46);
            cvtarr[3, 15] = chr(46);
            cvtarr[4, 15] = "14";
            cvtarr[5, 15] = chr(34) + chr(38) + chr(41);
            cvtarr[1, 16] = "015";
            cvtarr[2, 16] = chr(47);
            cvtarr[3, 16] = chr(47);
            cvtarr[4, 16] = "15";
            cvtarr[5, 16] = chr(33) + chr(42) + chr(38);
            cvtarr[1, 17] = "016";
            cvtarr[2, 17] = chr(48);
            cvtarr[3, 17] = chr(48);
            cvtarr[4, 17] = "16";
            cvtarr[5, 17] = chr(34) + chr(41) + chr(38);
            cvtarr[1, 18] = "017";
            cvtarr[2, 18] = chr(49);
            cvtarr[3, 18] = chr(49);
            cvtarr[4, 18] = "17";
            cvtarr[5, 18] = chr(34) + chr(42) + chr(37);
            cvtarr[1, 19] = "018";
            cvtarr[2, 19] = chr(50);
            cvtarr[3, 19] = chr(50);
            cvtarr[4, 19] = "18";
            cvtarr[5, 19] = chr(38) + chr(42) + chr(33);
            cvtarr[1, 20] = "019";
            cvtarr[2, 20] = chr(51);
            cvtarr[3, 20] = chr(51);
            cvtarr[4, 20] = "19";
            cvtarr[5, 20] = chr(38) + chr(33) + chr(42);
            cvtarr[1, 21] = "020";
            cvtarr[2, 21] = chr(52);
            cvtarr[3, 21] = chr(52);
            cvtarr[4, 21] = "20";
            cvtarr[5, 21] = chr(38) + chr(34) + chr(41);
            cvtarr[1, 22] = "021";
            cvtarr[2, 22] = chr(53);
            cvtarr[3, 22] = chr(53);
            cvtarr[4, 22] = "21";
            cvtarr[5, 22] = chr(37) + chr(42) + chr(34);
            cvtarr[1, 23] = "022";
            cvtarr[2, 23] = chr(54);
            cvtarr[3, 23] = chr(54);
            cvtarr[4, 23] = "22";
            cvtarr[5, 23] = chr(38) + chr(41) + chr(34);
            cvtarr[1, 24] = "023";
            cvtarr[2, 24] = chr(55);
            cvtarr[3, 24] = chr(55);
            cvtarr[4, 24] = "23";
            cvtarr[5, 24] = chr(41) + chr(37) + chr(41);
            cvtarr[1, 25] = "024";
            cvtarr[2, 25] = chr(56);
            cvtarr[3, 25] = chr(56);
            cvtarr[4, 25] = "24";
            cvtarr[5, 25] = chr(41) + chr(34) + chr(38);
            cvtarr[1, 26] = "025";
            cvtarr[2, 26] = chr(57);
            cvtarr[3, 26] = chr(57);
            cvtarr[4, 26] = "25";
            cvtarr[5, 26] = chr(42) + chr(33) + chr(38);
            cvtarr[1, 27] = "026";
            cvtarr[2, 27] = chr(58);
            cvtarr[3, 27] = chr(58);
            cvtarr[4, 27] = "26";
            cvtarr[5, 27] = chr(42) + chr(34) + chr(37);
            cvtarr[1, 28] = "027";
            cvtarr[2, 28] = chr(59);
            cvtarr[3, 28] = chr(59);
            cvtarr[4, 28] = "27";
            cvtarr[5, 28] = chr(41) + chr(38) + chr(34);
            cvtarr[1, 29] = "028";
            cvtarr[2, 29] = chr(60);
            cvtarr[3, 29] = chr(60);
            cvtarr[4, 29] = "28";
            cvtarr[5, 29] = chr(42) + chr(37) + chr(34);
            cvtarr[1, 30] = "029";
            cvtarr[2, 30] = chr(61);
            cvtarr[3, 30] = chr(61);
            cvtarr[4, 30] = "29";
            cvtarr[5, 30] = chr(42) + chr(38) + chr(33);
            cvtarr[1, 31] = "030";
            cvtarr[2, 31] = chr(62);
            cvtarr[3, 31] = chr(62);
            cvtarr[4, 31] = "30";
            cvtarr[5, 31] = chr(37) + chr(37) + chr(39);
            cvtarr[1, 32] = "031";
            cvtarr[2, 32] = chr(63);
            cvtarr[3, 32] = chr(63);
            cvtarr[4, 32] = "31";
            cvtarr[5, 32] = chr(37) + chr(39) + chr(37);
            cvtarr[1, 33] = "032";
            cvtarr[2, 33] = chr(64);
            cvtarr[3, 33] = chr(64);
            cvtarr[4, 33] = "32";
            cvtarr[5, 33] = chr(39) + chr(37) + chr(37);
            cvtarr[1, 34] = "033";
            cvtarr[2, 34] = chr(65);
            cvtarr[3, 34] = chr(65);
            cvtarr[4, 34] = "33";
            cvtarr[5, 34] = chr(33) + chr(35) + chr(39);
            cvtarr[1, 35] = "034";
            cvtarr[2, 35] = chr(66);
            cvtarr[3, 35] = chr(66);
            cvtarr[4, 35] = "34";
            cvtarr[5, 35] = chr(35) + chr(33) + chr(39);
            cvtarr[1, 36] = "035";
            cvtarr[2, 36] = chr(67);
            cvtarr[3, 36] = chr(67);
            cvtarr[4, 36] = "35";
            cvtarr[5, 36] = chr(35) + chr(35) + chr(37);
            cvtarr[1, 37] = "036";
            cvtarr[2, 37] = chr(68);
            cvtarr[3, 37] = chr(68);
            cvtarr[4, 37] = "36";
            cvtarr[5, 37] = chr(33) + chr(39) + chr(35);
            cvtarr[1, 38] = "037";
            cvtarr[2, 38] = chr(69);
            cvtarr[3, 38] = chr(69);
            cvtarr[4, 38] = "37";
            cvtarr[5, 38] = chr(35) + chr(37) + chr(35);
            cvtarr[1, 39] = "038";
            cvtarr[2, 39] = chr(70);
            cvtarr[3, 39] = chr(70);
            cvtarr[4, 39] = "38";
            cvtarr[5, 39] = chr(35) + chr(39) + chr(33);
            cvtarr[1, 40] = "039";
            cvtarr[2, 40] = chr(71);
            cvtarr[3, 40] = chr(71);
            cvtarr[4, 40] = "39";
            cvtarr[5, 40] = chr(37) + chr(35) + chr(35);
            cvtarr[1, 41] = "040";
            cvtarr[2, 41] = chr(72);
            cvtarr[3, 41] = chr(72);
            cvtarr[4, 41] = "40";
            cvtarr[5, 41] = chr(39) + chr(33) + chr(35);
            cvtarr[1, 42] = "041";
            cvtarr[2, 42] = chr(73);
            cvtarr[3, 42] = chr(73);
            cvtarr[4, 42] = "41";
            cvtarr[5, 42] = chr(39) + chr(35) + chr(33);
            cvtarr[1, 43] = "042";
            cvtarr[2, 43] = chr(74);
            cvtarr[3, 43] = chr(74);
            cvtarr[4, 43] = "42";
            cvtarr[5, 43] = chr(33) + chr(37) + chr(43);
            cvtarr[1, 44] = "043";
            cvtarr[2, 44] = chr(75);
            cvtarr[3, 44] = chr(75);
            cvtarr[4, 44] = "43";
            cvtarr[5, 44] = chr(33) + chr(39) + chr(41);
            cvtarr[1, 45] = "044";
            cvtarr[2, 45] = chr(76);
            cvtarr[3, 45] = chr(76);
            cvtarr[4, 45] = "44";
            cvtarr[5, 45] = chr(35) + chr(37) + chr(41);
            cvtarr[1, 46] = "045";
            cvtarr[2, 46] = chr(77);
            cvtarr[3, 46] = chr(77);
            cvtarr[4, 46] = "45";
            cvtarr[5, 46] = chr(33) + chr(41) + chr(39);
            cvtarr[1, 47] = "046";
            cvtarr[2, 47] = chr(78);
            cvtarr[3, 47] = chr(78);
            cvtarr[4, 47] = "46";
            cvtarr[5, 47] = chr(33) + chr(43) + chr(37);
            cvtarr[1, 48] = "047";
            cvtarr[2, 48] = chr(79);
            cvtarr[3, 48] = chr(79);
            cvtarr[4, 48] = "47";
            cvtarr[5, 48] = chr(35) + chr(41) + chr(37);
            cvtarr[1, 49] = "048";
            cvtarr[2, 49] = chr(80);
            cvtarr[3, 49] = chr(80);
            cvtarr[4, 49] = "48";
            cvtarr[5, 49] = chr(41) + chr(41) + chr(37);
            cvtarr[1, 50] = "049";
            cvtarr[2, 50] = chr(81);
            cvtarr[3, 50] = chr(81);
            cvtarr[4, 50] = "49";
            cvtarr[5, 50] = chr(37) + chr(35) + chr(41);
            cvtarr[1, 51] = "050";
            cvtarr[2, 51] = chr(82);
            cvtarr[3, 51] = chr(82);
            cvtarr[4, 51] = "50";
            cvtarr[5, 51] = chr(39) + chr(33) + chr(41);
            cvtarr[1, 52] = "051";
            cvtarr[2, 52] = chr(83);
            cvtarr[3, 52] = chr(83);
            cvtarr[4, 52] = "51";
            cvtarr[5, 52] = chr(37) + chr(41) + chr(35);
            cvtarr[1, 53] = "052";
            cvtarr[2, 53] = chr(84);
            cvtarr[3, 53] = chr(84);
            cvtarr[4, 53] = "52";
            cvtarr[5, 53] = chr(37) + chr(43) + chr(33);
            cvtarr[1, 54] = "053";
            cvtarr[2, 54] = chr(85);
            cvtarr[3, 54] = chr(85);
            cvtarr[4, 54] = "53";
            cvtarr[5, 54] = chr(37) + chr(41) + chr(41);
            cvtarr[1, 55] = "054";
            cvtarr[2, 55] = chr(86);
            cvtarr[3, 55] = chr(86);
            cvtarr[4, 55] = "54";
            cvtarr[5, 55] = chr(41) + chr(33) + chr(39);
            cvtarr[1, 56] = "055";
            cvtarr[2, 56] = chr(87);
            cvtarr[3, 56] = chr(87);
            cvtarr[4, 56] = "55";
            cvtarr[5, 56] = chr(41) + chr(35) + chr(37);
            cvtarr[1, 57] = "056";
            cvtarr[2, 57] = chr(88);
            cvtarr[3, 57] = chr(88);
            cvtarr[4, 57] = "56";
            cvtarr[5, 57] = chr(43) + chr(33) + chr(37);
            cvtarr[1, 58] = "057";
            cvtarr[2, 58] = chr(89);
            cvtarr[3, 58] = chr(89);
            cvtarr[4, 58] = "57";
            cvtarr[5, 58] = chr(41) + chr(37) + chr(35);
            cvtarr[1, 59] = "058";
            cvtarr[2, 59] = chr(90);
            cvtarr[3, 59] = chr(90);
            cvtarr[4, 59] = "58";
            cvtarr[5, 59] = chr(41) + chr(39) + chr(33);
            cvtarr[1, 60] = "059";
            cvtarr[2, 60] = chr(91);
            cvtarr[3, 60] = chr(91);
            cvtarr[4, 60] = "59";
            cvtarr[5, 60] = chr(43) + chr(37) + chr(33);
            cvtarr[1, 61] = "060";
            cvtarr[2, 61] = chr(92);
            cvtarr[3, 61] = chr(92);
            cvtarr[4, 61] = "60";
            cvtarr[5, 61] = chr(41) + chr(45) + chr(33);
            cvtarr[1, 62] = "061";
            cvtarr[2, 62] = chr(93);
            cvtarr[3, 62] = chr(93);
            cvtarr[4, 62] = "61";
            cvtarr[5, 62] = chr(38) + chr(36) + chr(33);
            cvtarr[1, 63] = "062";
            cvtarr[2, 63] = chr(94);
            cvtarr[3, 63] = chr(94);
            cvtarr[4, 63] = "62";
            cvtarr[5, 63] = chr(47) + chr(33) + chr(33);
            cvtarr[1, 64] = "063";
            cvtarr[2, 64] = chr(95);
            cvtarr[3, 64] = chr(95);
            cvtarr[4, 64] = "63";
            cvtarr[5, 64] = chr(33) + chr(34) + chr(40);
            cvtarr[1, 65] = "064";
            cvtarr[2, 65] = chr(0);
            cvtarr[3, 65] = chr(96);
            cvtarr[4, 65] = "64";
            cvtarr[5, 65] = chr(33) + chr(36) + chr(38);
            cvtarr[1, 66] = "065";
            cvtarr[2, 66] = chr(1);
            cvtarr[3, 66] = chr(97);
            cvtarr[4, 66] = "65";
            cvtarr[5, 66] = chr(34) + chr(33) + chr(40);
            cvtarr[1, 67] = "066";
            cvtarr[2, 67] = chr(2);
            cvtarr[3, 67] = chr(98);
            cvtarr[4, 67] = "66";
            cvtarr[5, 67] = chr(34) + chr(36) + chr(37);
            cvtarr[1, 68] = "067";
            cvtarr[2, 68] = chr(3);
            cvtarr[3, 68] = chr(99);
            cvtarr[4, 68] = "67";
            cvtarr[5, 68] = chr(36) + chr(33) + chr(38);
            cvtarr[1, 69] = "068";
            cvtarr[2, 69] = chr(4);
            cvtarr[3, 69] = chr(100);
            cvtarr[4, 69] = "68";
            cvtarr[5, 69] = chr(36) + chr(34) + chr(37);
            cvtarr[1, 70] = "069";
            cvtarr[2, 70] = chr(5);
            cvtarr[3, 70] = chr(101);
            cvtarr[4, 70] = "69";
            cvtarr[5, 70] = chr(33) + chr(38) + chr(36);
            cvtarr[1, 71] = "070";
            cvtarr[2, 71] = chr(6);
            cvtarr[3, 71] = chr(102);
            cvtarr[4, 71] = "70";
            cvtarr[5, 71] = chr(33) + chr(40) + chr(34);
            cvtarr[1, 72] = "071";
            cvtarr[2, 72] = chr(7);
            cvtarr[3, 72] = chr(103);
            cvtarr[4, 72] = "71";
            cvtarr[5, 72] = chr(34) + chr(37) + chr(36);
            cvtarr[1, 73] = "072";
            cvtarr[2, 73] = chr(8);
            cvtarr[3, 73] = chr(104);
            cvtarr[4, 73] = "72";
            cvtarr[5, 73] = chr(34) + chr(40) + chr(33);
            cvtarr[1, 74] = "073";
            cvtarr[2, 74] = chr(9);
            cvtarr[3, 74] = chr(105);
            cvtarr[4, 74] = "73";
            cvtarr[5, 74] = chr(36) + chr(37) + chr(34);
            cvtarr[1, 75] = "074";
            cvtarr[2, 75] = chr(10);
            cvtarr[3, 75] = chr(106);
            cvtarr[4, 75] = "74";
            cvtarr[5, 75] = chr(36) + chr(38) + chr(33);
            cvtarr[1, 76] = "075";
            cvtarr[2, 76] = chr(11);
            cvtarr[3, 76] = chr(107);
            cvtarr[4, 76] = "75";
            cvtarr[5, 76] = chr(40) + chr(34) + chr(33);
            cvtarr[1, 77] = "076";
            cvtarr[2, 77] = chr(12);
            cvtarr[3, 77] = chr(108);
            cvtarr[4, 77] = "76";
            cvtarr[5, 77] = chr(38) + chr(33) + chr(36);
            cvtarr[1, 78] = "077";
            cvtarr[2, 78] = chr(13);
            cvtarr[3, 78] = chr(109);
            cvtarr[4, 78] = "77";
            cvtarr[5, 78] = chr(45) + chr(41) + chr(33);
            cvtarr[1, 79] = "078";
            cvtarr[2, 79] = chr(14);
            cvtarr[3, 79] = chr(110);
            cvtarr[4, 79] = "78";
            cvtarr[5, 79] = chr(40) + chr(33) + chr(34);
            cvtarr[1, 80] = "079";
            cvtarr[2, 80] = chr(15);
            cvtarr[3, 80] = chr(111);
            cvtarr[4, 80] = "79";
            cvtarr[5, 80] = chr(35) + chr(45) + chr(33);
            cvtarr[1, 81] = "080";
            cvtarr[2, 81] = chr(16);
            cvtarr[3, 81] = chr(112);
            cvtarr[4, 81] = "80";
            cvtarr[5, 81] = chr(33) + chr(34) + chr(46);
            cvtarr[1, 82] = "081";
            cvtarr[2, 82] = chr(17);
            cvtarr[3, 82] = chr(113);
            cvtarr[4, 82] = "81";
            cvtarr[5, 82] = chr(34) + chr(33) + chr(46);
            cvtarr[1, 83] = "082";
            cvtarr[2, 83] = chr(18);
            cvtarr[3, 83] = chr(114);
            cvtarr[4, 83] = "82";
            cvtarr[5, 83] = chr(34) + chr(34) + chr(45);
            cvtarr[1, 84] = "083";
            cvtarr[2, 84] = chr(19);
            cvtarr[3, 84] = chr(115);
            cvtarr[4, 84] = "83";
            cvtarr[5, 84] = chr(33) + chr(46) + chr(34);
            cvtarr[1, 85] = "084";
            cvtarr[2, 85] = chr(20);
            cvtarr[3, 85] = chr(116);
            cvtarr[4, 85] = "84";
            cvtarr[5, 85] = chr(34) + chr(45) + chr(34);
            cvtarr[1, 86] = "085";
            cvtarr[2, 86] = chr(21);
            cvtarr[3, 86] = chr(117);
            cvtarr[4, 86] = "85";
            cvtarr[5, 86] = chr(34) + chr(46) + chr(33);
            cvtarr[1, 87] = "086";
            cvtarr[2, 87] = chr(22);
            cvtarr[3, 87] = chr(118);
            cvtarr[4, 87] = "86";
            cvtarr[5, 87] = chr(45) + chr(34) + chr(34);
            cvtarr[1, 88] = "087";
            cvtarr[2, 88] = chr(23);
            cvtarr[3, 88] = chr(119);
            cvtarr[4, 88] = "87";
            cvtarr[5, 88] = chr(46) + chr(33) + chr(34);
            cvtarr[1, 89] = "088";
            cvtarr[2, 89] = chr(24);
            cvtarr[3, 89] = chr(120);
            cvtarr[4, 89] = "88";
            cvtarr[5, 89] = chr(46) + chr(34) + chr(33);
            cvtarr[1, 90] = "089";
            cvtarr[2, 90] = chr(25);
            cvtarr[3, 90] = chr(121);
            cvtarr[4, 90] = "89";
            cvtarr[5, 90] = chr(37) + chr(37) + chr(45);
            cvtarr[1, 91] = "090";
            cvtarr[2, 91] = chr(26);
            cvtarr[3, 91] = chr(122);
            cvtarr[4, 91] = "90";
            cvtarr[5, 91] = chr(37) + chr(45) + chr(37);
            cvtarr[1, 92] = "091";
            cvtarr[2, 92] = chr(27);
            cvtarr[3, 92] = chr(123);
            cvtarr[4, 92] = "91";
            cvtarr[5, 92] = chr(45) + chr(37) + chr(37);
            cvtarr[1, 93] = "092";
            cvtarr[2, 93] = chr(28);
            cvtarr[3, 93] = chr(124);
            cvtarr[4, 93] = "92";
            cvtarr[5, 93] = chr(33) + chr(33) + chr(47);
            cvtarr[1, 94] = "093";
            cvtarr[2, 94] = chr(29);
            cvtarr[3, 94] = chr(125);
            cvtarr[4, 94] = "93";
            cvtarr[5, 94] = chr(33) + chr(35) + chr(45);
            cvtarr[1, 95] = "094";
            cvtarr[2, 95] = chr(30);
            cvtarr[3, 95] = chr(126);
            cvtarr[4, 95] = "94";
            cvtarr[5, 95] = chr(35) + chr(33) + chr(45);
            cvtarr[1, 96] = "095";
            cvtarr[2, 96] = chr(31);
            cvtarr[3, 96] = chr(127);
            cvtarr[4, 96] = "95";
            cvtarr[5, 96] = chr(33) + chr(45) + chr(35);
            cvtarr[1, 97] = "096";
            cvtarr[2, 97] = "";
            cvtarr[3, 97] = "";
            cvtarr[4, 97] = "96";
            cvtarr[5, 97] = chr(33) + chr(47) + chr(33);
            cvtarr[1, 98] = "097";
            cvtarr[2, 98] = "";
            cvtarr[3, 98] = "";
            cvtarr[4, 98] = "97";
            cvtarr[5, 98] = chr(45) + chr(33) + chr(35);
            cvtarr[1, 99] = "098";
            cvtarr[2, 99] = "";
            cvtarr[3, 99] = "";
            cvtarr[4, 99] = "98";
            cvtarr[5, 99] = chr(45) + chr(35) + chr(33);
            cvtarr[1, 100] = "099";
            cvtarr[2, 100] = "";
            cvtarr[3, 100] = "";
            cvtarr[4, 100] = "99";
            cvtarr[5, 100] = chr(33) + chr(41) + chr(45);
            cvtarr[1, 101] = "100";
            cvtarr[2, 101] = "";
            cvtarr[3, 101] = "";
            cvtarr[4, 101] = "";
            cvtarr[5, 101] = chr(33) + chr(45) + chr(41);
            cvtarr[1, 102] = "101";
            cvtarr[2, 102] = "";
            cvtarr[3, 102] = "";
            cvtarr[4, 102] = "";
            cvtarr[5, 102] = chr(41) + chr(33) + chr(45);
            cvtarr[1, 103] = "102";
            cvtarr[2, 103] = "";
            cvtarr[3, 103] = "";
            cvtarr[4, 103] = "";
            cvtarr[5, 103] = chr(45) + chr(33) + chr(41);
            cvtarr[1, 104] = "103";
            cvtarr[2, 104] = "";
            cvtarr[3, 104] = "";
            cvtarr[4, 104] = "";
            cvtarr[5, 104] = chr(37) + chr(36) + chr(34);
            cvtarr[1, 105] = "104";
            cvtarr[2, 105] = "";
            cvtarr[3, 105] = "";
            cvtarr[4, 105] = "";
            cvtarr[5, 105] = chr(37) + chr(34) + chr(36);
            cvtarr[1, 106] = "105";
            cvtarr[2, 106] = "";
            cvtarr[3, 106] = "";
            cvtarr[4, 106] = "";
            cvtarr[5, 106] = chr(37) + chr(34) + chr(42);


        }

        Char chr(int chin)
        {
            return  (char)chin;
        }
    }
}
